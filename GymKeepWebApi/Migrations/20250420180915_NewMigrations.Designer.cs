// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GymKeepWebApi.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250420180915_NewMigrations")]
    partial class NewMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GymKeepWebApi.Models.Achievement", b =>
                {
                    b.Property<int>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AchievementId"));

                    b.Property<DateTime>("AchievedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("AchievedAt");

                    b.Property<string>("AchievementDescription")
                        .HasColumnType("text")
                        .HasColumnName("AchievementDescription");

                    b.Property<string>("AchievementName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("AchievementName");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("UserId");

                    b.HasKey("AchievementId");

                    b.HasIndex("UserId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.CalorieCalculation", b =>
                {
                    b.Property<int>("CalorieCalculationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CalorieCalculationId"));

                    b.Property<string>("ActivityLevel")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ActivityLevel");

                    b.Property<decimal>("AdjustedCalories")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("AdjustedCalories");

                    b.Property<int>("Age")
                        .HasColumnType("integer")
                        .HasColumnName("Age");

                    b.Property<DateTime>("CalculationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CalculationDate");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Gender");

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Goal");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("Height");

                    b.Property<decimal>("Tdee")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Tdee");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("UserId");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("Weight");

                    b.HasKey("CalorieCalculationId");

                    b.HasIndex("UserId");

                    b.ToTable("CalorieCalculations");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.DifficultyLevel", b =>
                {
                    b.Property<int>("DifficultyLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DifficultyLevelId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.HasKey("DifficultyLevelId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DifficultyLevels");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ExerciseId"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<int>("DifficultyLevelId")
                        .HasColumnType("integer")
                        .HasColumnName("DifficultyLevelId");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text")
                        .HasColumnName("ImageUrl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<int>("RegionId")
                        .HasColumnType("integer")
                        .HasColumnName("RegionId");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("text")
                        .HasColumnName("VideoUrl");

                    b.HasKey("ExerciseId");

                    b.HasIndex("DifficultyLevelId");

                    b.HasIndex("RegionId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.ExerciseRegion", b =>
                {
                    b.Property<int>("ExerciseRegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ExerciseRegionId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.HasKey("ExerciseRegionId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ExerciseRegions");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.PlanExercise", b =>
                {
                    b.Property<int>("PlanExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PlanExerciseId"));

                    b.Property<int>("ExerciseId")
                        .HasColumnType("integer")
                        .HasColumnName("ExerciseId");

                    b.Property<int?>("OrderInPlan")
                        .HasColumnType("integer")
                        .HasColumnName("OrderInPlan");

                    b.Property<int>("Reps")
                        .HasColumnType("integer")
                        .HasColumnName("Reps");

                    b.Property<int?>("RestDurationSeconds")
                        .HasColumnType("integer")
                        .HasColumnName("RestDurationSeconds");

                    b.Property<int>("Sets")
                        .HasColumnType("integer")
                        .HasColumnName("Sets");

                    b.Property<int>("WorkoutPlanId")
                        .HasColumnType("integer")
                        .HasColumnName("WorkoutPlanId");

                    b.HasKey("PlanExerciseId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutPlanId");

                    b.ToTable("PlanExercises");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.RegionalWorkout", b =>
                {
                    b.Property<int>("RegionalWorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RegionalWorkoutId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<int>("ExerciseRegionId")
                        .HasColumnType("integer")
                        .HasColumnName("ExerciseRegionId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.HasKey("RegionalWorkoutId");

                    b.HasIndex("ExerciseRegionId");

                    b.ToTable("RegionalWorkouts");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.RegionalWorkoutExercise", b =>
                {
                    b.Property<int>("RegionalWorkoutExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RegionalWorkoutExerciseId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("integer")
                        .HasColumnName("ExerciseId");

                    b.Property<int?>("OrderInWorkout")
                        .HasColumnType("integer")
                        .HasColumnName("OrderInWorkout");

                    b.Property<int?>("Reps")
                        .HasColumnType("integer")
                        .HasColumnName("Reps");

                    b.Property<int?>("Sets")
                        .HasColumnType("integer")
                        .HasColumnName("Sets");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("integer")
                        .HasColumnName("WorkoutId");

                    b.HasKey("RegionalWorkoutExerciseId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("RegionalWorkoutExercises");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.SessionExercise", b =>
                {
                    b.Property<int>("SessionExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SessionExerciseId"));

                    b.Property<int>("ExerciseId")
                        .HasColumnType("integer")
                        .HasColumnName("ExerciseId");

                    b.Property<int?>("OrderInSession")
                        .HasColumnType("integer")
                        .HasColumnName("OrderInSession");

                    b.Property<int?>("PlanExerciseId")
                        .HasColumnType("integer")
                        .HasColumnName("PlanExerciseId");

                    b.Property<int>("WorkoutSessionId")
                        .HasColumnType("integer")
                        .HasColumnName("WorkoutSessionId");

                    b.HasKey("SessionExerciseId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("PlanExerciseId");

                    b.HasIndex("WorkoutSessionId");

                    b.ToTable("SessionExercises");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.SetLog", b =>
                {
                    b.Property<int>("SetLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SetLogId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsCompleted");

                    b.Property<int?>("RepsCompleted")
                        .HasColumnType("integer")
                        .HasColumnName("RepsCompleted");

                    b.Property<int>("SessionExerciseId")
                        .HasColumnType("integer")
                        .HasColumnName("SessionExerciseId");

                    b.Property<int>("SetNumber")
                        .HasColumnType("integer")
                        .HasColumnName("SetNumber");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric")
                        .HasColumnName("Weight");

                    b.HasKey("SetLogId");

                    b.HasIndex("SessionExerciseId");

                    b.ToTable("SetLogs");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Password");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedAt");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Username");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.UserSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DailyGoal")
                        .HasColumnType("integer")
                        .HasColumnName("DailyGoal");

                    b.Property<bool>("IsDarkMode")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDarkMode");

                    b.Property<TimeSpan?>("NotificationTime")
                        .HasColumnType("interval")
                        .HasColumnName("NotificationTime");

                    b.Property<bool>("NotificationsEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("NotificationsEnabled");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedAt");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.WorkoutPlan", b =>
                {
                    b.Property<int>("WorkoutPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WorkoutPlanId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("UserId");

                    b.HasKey("WorkoutPlanId");

                    b.HasIndex("UserId");

                    b.ToTable("WorkoutPlans");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.WorkoutSession", b =>
                {
                    b.Property<int>("WorkoutSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WorkoutSessionId"));

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("integer")
                        .HasColumnName("DurationMinutes");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("Notes");

                    b.Property<DateTime>("SessionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("SessionDate");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("UserId");

                    b.Property<int?>("WorkoutPlanId")
                        .HasColumnType("integer")
                        .HasColumnName("WorkoutPlanId");

                    b.HasKey("WorkoutSessionId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkoutPlanId");

                    b.ToTable("WorkoutSessions");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.Achievement", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.CalorieCalculation", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.Exercise", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.DifficultyLevel", "DifficultyLevel")
                        .WithMany()
                        .HasForeignKey("DifficultyLevelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GymKeepWebApi.Models.ExerciseRegion", "ExerciseRegion")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DifficultyLevel");

                    b.Navigation("ExerciseRegion");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.PlanExercise", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GymKeepWebApi.Models.WorkoutPlan", "WorkoutPlan")
                        .WithMany()
                        .HasForeignKey("WorkoutPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("WorkoutPlan");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.RegionalWorkout", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.ExerciseRegion", "ExerciseRegion")
                        .WithMany()
                        .HasForeignKey("ExerciseRegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ExerciseRegion");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.RegionalWorkoutExercise", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GymKeepWebApi.Models.RegionalWorkout", "RegionalWorkout")
                        .WithMany()
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("RegionalWorkout");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.SessionExercise", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GymKeepWebApi.Models.PlanExercise", "PlanExercise")
                        .WithMany()
                        .HasForeignKey("PlanExerciseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GymKeepWebApi.Models.WorkoutSession", "WorkoutSession")
                        .WithMany()
                        .HasForeignKey("WorkoutSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("PlanExercise");

                    b.Navigation("WorkoutSession");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.SetLog", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.SessionExercise", "SessionExercise")
                        .WithMany()
                        .HasForeignKey("SessionExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SessionExercise");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.UserSetting", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.User", "User")
                        .WithOne()
                        .HasForeignKey("GymKeepWebApi.Models.UserSetting", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.WorkoutPlan", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.WorkoutSession", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymKeepWebApi.Models.WorkoutPlan", "WorkoutPlan")
                        .WithMany()
                        .HasForeignKey("WorkoutPlanId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");

                    b.Navigation("WorkoutPlan");
                });
#pragma warning restore 612, 618
        }
    }
}
