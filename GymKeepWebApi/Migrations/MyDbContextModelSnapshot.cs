// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GymKeepWebApi.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GymKeepWebApi.Models.Achievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AchievedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("AchievementDescription")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("AchievementName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("achievements", (string)null);
                });

            modelBuilder.Entity("GymKeepWebApi.Models.CalorieCalculation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ActivityLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("AdjustedCalories")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CalculationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("Tdee")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("calorie_calculations", (string)null);
                });

            modelBuilder.Entity("GymKeepWebApi.Models.DifficultyLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("difficulty_levels", (string)null);
                });

            modelBuilder.Entity("GymKeepWebApi.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("DifficultyLevelId")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("RegionId")
                        .HasColumnType("integer");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyLevelId");

                    b.HasIndex("RegionId");

                    b.ToTable("exercises", (string)null);
                });

            modelBuilder.Entity("GymKeepWebApi.Models.ExerciseRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("exercise_regions", (string)null);
                });

            modelBuilder.Entity("GymKeepWebApi.Models.PlanExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ExerciseId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderInPlan")
                        .HasColumnType("integer");

                    b.Property<int>("Reps")
                        .HasColumnType("integer");

                    b.Property<int?>("RestDurationSeconds")
                        .HasColumnType("integer");

                    b.Property<int>("Sets")
                        .HasColumnType("integer");

                    b.Property<int>("WorkoutPlanId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutPlanId");

                    b.ToTable("plan_exercises", (string)null);
                });

            modelBuilder.Entity("GymKeepWebApi.Models.RegionalWorkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("regional_workouts", (string)null);
                });

            modelBuilder.Entity("GymKeepWebApi.Models.RegionalWorkoutExercise", b =>
                {
                    b.Property<int>("WorkoutId")
                        .HasColumnType("integer");

                    b.Property<string>("ExerciseName")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("OrderInWorkout")
                        .HasColumnType("integer");

                    b.Property<int?>("Reps")
                        .HasColumnType("integer");

                    b.Property<int?>("Sets")
                        .HasColumnType("integer");

                    b.HasKey("WorkoutId", "ExerciseName");

                    b.ToTable("regional_workout_exercises", (string)null);
                });

            modelBuilder.Entity("GymKeepWebApi.Models.SessionExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ExerciseId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderInSession")
                        .HasColumnType("integer");

                    b.Property<int?>("PlanExerciseId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkoutSessionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("PlanExerciseId");

                    b.HasIndex("WorkoutSessionId");

                    b.ToTable("session_exercises", (string)null);
                });

            modelBuilder.Entity("GymKeepWebApi.Models.SetLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("RepsCompleted")
                        .HasColumnType("integer");

                    b.Property<int>("SessionExerciseId")
                        .HasColumnType("integer");

                    b.Property<int>("SetNumber")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("SessionExerciseId");

                    b.ToTable("set_logs", (string)null);
                });

            modelBuilder.Entity("GymKeepWebApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("GymKeepWebApi.Models.UserSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DailyGoal")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDarkMode")
                        .HasColumnType("boolean");

                    b.Property<TimeSpan?>("NotificationTime")
                        .HasColumnType("interval");

                    b.Property<bool>("NotificationsEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("user_settings", (string)null);
                });

            modelBuilder.Entity("GymKeepWebApi.Models.WorkoutPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("workout_plans", (string)null);
                });

            modelBuilder.Entity("GymKeepWebApi.Models.WorkoutSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<DateTime>("SessionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("WorkoutPlanId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkoutPlanId");

                    b.ToTable("workout_sessions", (string)null);
                });

            modelBuilder.Entity("GymKeepWebApi.Models.Achievement", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.User", "User")
                        .WithMany("Achievements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.CalorieCalculation", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.User", "User")
                        .WithMany("CalorieCalculations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.Exercise", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.DifficultyLevel", "DifficultyLevel")
                        .WithMany("Exercises")
                        .HasForeignKey("DifficultyLevelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GymKeepWebApi.Models.ExerciseRegion", "ExerciseRegion")
                        .WithMany("Exercises")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DifficultyLevel");

                    b.Navigation("ExerciseRegion");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.PlanExercise", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.Exercise", "Exercise")
                        .WithMany("PlanExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymKeepWebApi.Models.WorkoutPlan", "WorkoutPlan")
                        .WithMany("PlanExercises")
                        .HasForeignKey("WorkoutPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("WorkoutPlan");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.RegionalWorkoutExercise", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.RegionalWorkout", "RegionalWorkout")
                        .WithMany("RegionalWorkoutExercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegionalWorkout");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.SessionExercise", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.Exercise", "Exercise")
                        .WithMany("SessionExercises")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GymKeepWebApi.Models.PlanExercise", "PlanExercise")
                        .WithMany("SessionExercises")
                        .HasForeignKey("PlanExerciseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GymKeepWebApi.Models.WorkoutSession", "WorkoutSession")
                        .WithMany("SessionExercises")
                        .HasForeignKey("WorkoutSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("PlanExercise");

                    b.Navigation("WorkoutSession");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.SetLog", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.SessionExercise", "SessionExercise")
                        .WithMany("SetLogs")
                        .HasForeignKey("SessionExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SessionExercise");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.UserSetting", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.User", "User")
                        .WithMany("UserSettings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.WorkoutPlan", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.User", "User")
                        .WithMany("WorkoutPlans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.WorkoutSession", b =>
                {
                    b.HasOne("GymKeepWebApi.Models.User", "User")
                        .WithMany("WorkoutSessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymKeepWebApi.Models.WorkoutPlan", "WorkoutPlan")
                        .WithMany("WorkoutSessions")
                        .HasForeignKey("WorkoutPlanId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");

                    b.Navigation("WorkoutPlan");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.DifficultyLevel", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.Exercise", b =>
                {
                    b.Navigation("PlanExercises");

                    b.Navigation("SessionExercises");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.ExerciseRegion", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.PlanExercise", b =>
                {
                    b.Navigation("SessionExercises");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.RegionalWorkout", b =>
                {
                    b.Navigation("RegionalWorkoutExercises");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.SessionExercise", b =>
                {
                    b.Navigation("SetLogs");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.User", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("CalorieCalculations");

                    b.Navigation("UserSettings");

                    b.Navigation("WorkoutPlans");

                    b.Navigation("WorkoutSessions");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.WorkoutPlan", b =>
                {
                    b.Navigation("PlanExercises");

                    b.Navigation("WorkoutSessions");
                });

            modelBuilder.Entity("GymKeepWebApi.Models.WorkoutSession", b =>
                {
                    b.Navigation("SessionExercises");
                });
#pragma warning restore 612, 618
        }
    }
}
